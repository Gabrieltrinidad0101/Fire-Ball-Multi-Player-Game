name: Build and Deploy

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: self-hosted
    steps: 
    - uses: actions/checkout@v3
    - name: create .env file game 
      run: |
        echo "DB_HOST=$MYSQL_HOST" >> ./microservices/Game/.env
        echo "DB_PORT=$MYSQL_PORT" >> ./microservices/Game/.env
        echo "DB_NAME=$DATABASE_NAME_GAME" >> ./microservices/Game/.env
        echo "DB_PASSWORD=$MYSQL_PASSWORD" >> ./microservices/Game/.env
        echo "DB_USER=$MYSQL_USERNAME" >> ./microservices/Game/.env
        echo "TOKEN_MICROSERVICE=$TOKEN_MICROSERVICE" >> ./microservices/Game/.env
        echo "MICROSERVICE_USER_URL=$MICROSERVICE_USER_URL" >> ./microservices/Game/.env
      env:
        MYSQL_HOST: ${{secrets.MYSQL_HOST}}
        MYSQL_PORT: ${{secrets.MYSQL_PORT}}
        MYSQL_USERNAME: ${{secrets.MYSQL_USERNAME}}
        MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
        DATABASE_NAME_GAME: ${{secrets.DATABASE_NAME_GAME}}
        MICROSERVICE_USER_URL: ${{secrets.MICROSERVICE_USER_URL}}
        TOKEN_MICROSERVICE: ${{secrets.TOKEN_MICROSERVICE}}
    
    - name: create .env file user 
      run: |
        echo "DB_HOST=$MYSQL_HOST" >> ./microservices/User/.env
        echo "DB_PORT=$MYSQL_PORT" >> ./microservices/User/.env
        echo "DB_NAME=$DATABASE_NAME_USER" >> ./microservices/User/.env
        echo "DB_PASSWORD=$MYSQL_PASSWORD" >> ./microservices/User/.env
        echo "DB_USER=$MYSQL_USERNAME" >> ./microservices/User/.env
        echo "TOKEN_MICROSERVICE=$TOKEN_MICROSERVICE" >> ./microservices/User/.env
        echo "MICROSERVICE_USER_URL=$MICROSERVICE_USER_URL" >> ./microservices/User/.env
      env:
        MYSQL_HOST: ${{secrets.MYSQL_HOST}}
        MYSQL_PORT: ${{secrets.MYSQL_PORT}}
        MYSQL_USERNAME: ${{secrets.MYSQL_USERNAME}}
        DATABASE_NAME_USER: ${{secrets.DATABASE_NAME_USER}}
        MYSQL_PASSWORD: ${{secrets.MYSQL_PASSWORD}}
        TOKEN_MICROSERVICE: ${{secrets.TOKEN_MICROSERVICE}}

    - name: Build the Docker image
      run:
        echo ${{secrets.SSH_PRIVATE_KEY}} | sudo -S bash ./run-pro.sh 